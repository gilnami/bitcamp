<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    
    <context:component-scan base-package="bitcamp.mvc.web"/>
    
    <!-- Spring WebMVC의 기본 뷰 리졸버를 교체한다.
         => JSP URL의 앞뒤 경로를 미리 설정해두면 페이지 컨트롤러에서
            view URL을 지정하기 쉽다.
     -->
     
     <!-- MVC관련 애노테이션을 처리할 수 있게 한다. -->
     <mvc:annotation-driven enable-matrix-variables="true"/>
     
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
	    <property name="prefix" value="/WEB-INF/jsp/"/>
	    <property name="suffix" value=".jsp"/>
    </bean>
    
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!-- 클라이언트가 보낸 데이터의 Content-Type이 "application/json"일 때,  
                     "자바 객체"로 변환해주는 컨버터  
                     또한 요청 핸들러가 리턴한 자바 객체를 
                     "application/json" 형식의 문자열로 변환해주는 작업도 
                     함께 수행한다. -->
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
                
                <!-- 클라이언트가 보낸 데이터의 Content-Type이 "text/plain"일 때,
                     String으로 변환해주는 컨버터 -->
                <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            </list>
        </property>
    </bean>
</beans>

